import './globals.css';

import { dir } from 'i18next';
import type { Metadata } from 'next';
import { notFound } from 'next/navigation';
import { ThemeProvider } from 'next-themes';
import { ReactNode } from 'react';
import { Toaster } from 'sonner';

import { EnvironmentProvider } from '@/contexts/Environment';
import { inter } from '@/fonts';
import { i18nConfig } from '@/i18n/i18n';
import TranslationsProvider from '@/i18n/TranslationsProvider';

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export function generateStaticParams() {
  return i18nConfig.locales.map(locale => ({ locale }));
}

export default async function RootLayout(props: {
  children: ReactNode;
  params: Promise<{ locale: string }>;
}) {
  const { locale } = await props.params;
  const { children } = props;

  if (!i18nConfig.locales.includes(locale)) {
    notFound();
  }

  return (
    <html lang={locale} dir={dir(locale)} suppressHydrationWarning>
      <body className={inter.className}>
        <EnvironmentProvider
          value={{
            SPANISH_EMAIL: process.env.SPANISH_EMAIL!,
            FALLBACK_EMAIL: process.env.FALLBACK_EMAIL!,
          }}
        >
          <TranslationsProvider namespaces={['root']}>
            <ThemeProvider attribute='class' disableTransitionOnChange>
              <div vaul-drawer-wrapper=''>
                <div className='relative flex min-h-screen flex-col bg-background'>
                  <div>{children}</div>
                </div>
              </div>
              <Toaster
                richColors
                duration={15000}
                closeButton
                position='bottom-center'
              />
            </ThemeProvider>
          </TranslationsProvider>
        </EnvironmentProvider>
      </body>
    </html>
  );
}
